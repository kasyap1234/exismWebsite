[{"/Users/kasyapdharanikota/Desktop/exismWebsite/client/src/index.js":"1","/Users/kasyapdharanikota/Desktop/exismWebsite/client/src/App.js":"2","/Users/kasyapdharanikota/Desktop/exismWebsite/client/src/components/Home.js":"3","/Users/kasyapdharanikota/Desktop/exismWebsite/client/src/components/Path.js":"4","/Users/kasyapdharanikota/Desktop/exismWebsite/client/src/components/RoutesPath.js":"5","/Users/kasyapdharanikota/Desktop/exismWebsite/client/src/components/Amplitude.js":"6"},{"size":430,"mtime":1686812331720,"results":"7","hashOfConfig":"8"},{"size":303,"mtime":1686814050108,"results":"9","hashOfConfig":"8"},{"size":3493,"mtime":1686905047578,"results":"10","hashOfConfig":"8"},{"size":1125,"mtime":1686833004085,"results":"11","hashOfConfig":"8"},{"size":482,"mtime":1686832907711,"results":"12","hashOfConfig":"8"},{"size":2611,"mtime":1686903872872,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"9z456p",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/Users/kasyapdharanikota/Desktop/exismWebsite/client/src/index.js",[],[],[],"/Users/kasyapdharanikota/Desktop/exismWebsite/client/src/App.js",["35","36","37","38"],[],"import logo from './logo.svg';\nimport './App.css';\nimport RoutesPath from './components/RoutesPath'; \nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n     <RoutesPath /> \n     \n    </div>\n  );\n}\n\nexport default App;\n","/Users/kasyapdharanikota/Desktop/exismWebsite/client/src/components/Home.js",[],[],"/Users/kasyapdharanikota/Desktop/exismWebsite/client/src/components/Path.js",[],[],"/Users/kasyapdharanikota/Desktop/exismWebsite/client/src/components/RoutesPath.js",[],[],"/Users/kasyapdharanikota/Desktop/exismWebsite/client/src/components/Amplitude.js",["39","40"],[],"import React, { useState } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport axios from 'axios';\n\nfunction Amplitude() {\n  const [siteList, setSiteList] = useState([\"\", \"\", \"\", \"\", \"\"]);\n  const [ampsiteList, setAmpSiteList] = useState([\"\", \"\", \"\", \"\", \"\"]);\n  const [crustList, setCrustList] = useState([\"\", \"\", \"\", \"\", \"\",\"\",\"\",\"\"]);\n  const [ampCrustList, setAmpCrustList] = useState([\"\", \"\", \"\", \"\", \"\",\"\",\"\",\"\"]);\n\n  const handleAmpChange = (index, event) => {\n    let newList = [...ampsiteList];\n    newList[index] = event.target.value;\n    setAmpSiteList(newList);\n  };\n\n  const handleCrustChange = (index, event) => {\n    let newList = [...crustList];\n    newList[index] = event.target.value;\n    setCrustList(newList);\n  };\n\n  const handleAmpCrustChange = (index, event) => {\n    let newList = [...ampCrustList];\n    newList[index] = event.target.value;\n    setAmpCrustList(newList);\n  };\n\n  const handleChange = (index, event) => {\n    let newList = [...siteList];\n    newList[index] = event.target.value;\n    setSiteList(newList);\n  };\n\n  const sendDataToServer = () => {\n    axios.post('/your-endpoint', { siteList, ampsiteList, crustList, ampCrustList })\n      .then(response => console.log(response))\n      .catch(error => console.error(error));\n  };\n\n\n  return (\n    <div>\n\n        <h2> Site Amplitude</h2>\n      {siteList.map((item, index) =>  (\n        <TextField\n          key={index}\n          label={`Freq${index + 1}`}\n          variant=\"outlined\"\n          value={item}\n          onChange={(event) => handleChange(index, event)}\n        />\n      ))}\n      <h3> Amp </h3> \n        {ampsiteList.map((item, index) => (\n        <TextField\n          key={index}\n          label={`${index + 1}`}\n          variant=\"outlined\"\n          value={item}\n          onChange={(event) => handleAmpChange(index, event)}\n        />\n      ))}    \n      <h2> Crust Amplitude </h2> \n      <p> Frequency </p> \n      {crustList.map((item, index) => (\n        <TextField\n          key={index}\n          style={{width: '120px' ,margin: '10px'}}\n          label={`Freq${index + 1}`}\n          variant=\"outlined\"\n          value={item}\n          onChange={(event) => handleCrustChange(index, event)}\n        />\n      ))}   \n      <p> Amp </p> \n      {ampCrustList.map((item,index) =>(\n        <TextField \n        key={index}\n        style={{width: '120px' ,margin: '10px'}}\n        label={`${index+1}`}\n        variant=\"outlined\"\n        value={item}\n        onChange={(event) => handleAmpCrustChange(index,event)}\n        />\n      ))\n}\n\n\n       \n\n    </div>\n  );\n}\n\nexport default Amplitude;\n",{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":4,"column":27,"nodeType":"43","messageId":"44","endLine":4,"endColumn":33},{"ruleId":"41","severity":1,"message":"46","line":4,"column":35,"nodeType":"43","messageId":"44","endLine":4,"endColumn":40},{"ruleId":"41","severity":1,"message":"47","line":4,"column":42,"nodeType":"43","messageId":"44","endLine":4,"endColumn":46},{"ruleId":"41","severity":1,"message":"48","line":2,"column":21,"nodeType":"43","messageId":"44","endLine":2,"endColumn":27},{"ruleId":"41","severity":1,"message":"49","line":35,"column":9,"nodeType":"43","messageId":"44","endLine":35,"endColumn":25},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'sendDataToServer' is assigned a value but never used."]